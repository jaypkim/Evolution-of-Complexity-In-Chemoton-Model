;; --------------------
;; Enzyme Kinetics
;; --------------------

;; Use the Enzyme Kinetics equation to find parameter values

;; If you are adding a new reaction, copy and paste the "react" and
;; "form-product" functions, switching substrate-molecule for the substrate in "react"
;; and the product in "form-product" for whatever is relevant.
;; Follow format for the a-1-n-&-substrate reaction
;; Make a new dissociation function, with changes to the "hatch" function and the "breed-here"


;; -----------------------------
;; COMPLEX FORMATION FUNCTIONS
;; -----------------------------

;; Change the "substrate-here" to whatever the reactant for the 
;; reaction is
;; For enzymes with multiple active sites, simply change "one-of" into "n-of"

to form-complex-a1-&-s 
  let mol-1 one-of (other substrate-here)
  if mol-1 = nobody [stop]
  
  set rxn-reactant "complex"
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-time-dif ticks
end

to form-complex-a2-&-mod-a1
  let mol-1 one-of (other mod-a-1-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

to form-complex-a3-&-mod-a2
  let mol-1 one-of (other mod-a-2-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

to form-complex-a4-&-mod-a3
  let mol-1 one-of (other mod-a-3-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

to form-complex-a5-&-mod-a4
  let mol-1 one-of (other mod-a-4-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Super proteins
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;a-1s
to form-complex-a1s-&-mod-a2
  let mol-1 one-of (other mod-a-2-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a1s-&-sub
  let mol-1 one-of (other substrate-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

;; a2s
to form-complex-a2s-&-mod-a3
  let mol-1 one-of (other mod-a-3-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a2s-&-mod-a1
  let mol-1 one-of (other mod-a-1-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end
;;a-3s
to form-complex-a3s-&-mod-a4
  let mol-1 one-of (other mod-a-4-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a3s-&-mod-a2
  let mol-1 one-of (other mod-a-2-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

;; a4s
to form-complex-a4s-&-sub
  let mol-1 one-of (other substrate-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a4s-&-mod-a-3
  let mol-1 one-of (other mod-a-3-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end

;; a-5-s

to form-complex-a5s-&-mod-a-4
  let mol-1 one-of (other mod-a-4-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a5s-&-mod-a-1
  let mol-1 one-of (other mod-a-1-n-here)
  if mol-1 = nobody [stop]
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; a-#-r proteins
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to form-complex-a1r-&-s-s
  let mol-1 one-of (other substrate-s-here)
  if mol-1 = nobody [stop]
  
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-reactant "complex"
  set rxn-time-dif ticks
end


to form-complex-a2r-&-mod-a-1-s
  let mol-1 one-of (other mod-a-1-s-here)
  if mol-1 = nobody [stop]
  
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-time-dif ticks
  set rxn-reactant "complex"
end

to form-complex-a3r-&-mod-a-2-s
  let mol-1 one-of (other mod-a-2-s-here)
  if mol-1 = nobody [stop]
  
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]

  set rxn-time-dif ticks
    set rxn-reactant "complex"
end

to form-complex-a4r-&-mod-a-3-s
  let mol-1 one-of (other mod-a-3-s-here)
  if mol-1 = nobody [stop]
  
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-time-dif ticks
  set rxn-reactant "complex"
end

to form-complex-a5r-&-mod-a-4-s
  let mol-1 one-of (other mod-a-4-s-here)
  if mol-1 = nobody [stop]
  
  set rxn-reactant "complex"
  ask self
  [
   set mass mass + [mass] of mol-1 
   set radius radius + [radius] of mol-1
   set size radius
  ]
  ask mol-1 [die]
  set rxn-time-dif ticks
end

;; Binding time
;; enzyme procedure that controls the rate at which complexed turtles break apart
;; this affects the enzyme agent


;; ---------------------------
;; DISSOCIATION FUNCTIONS
;; ---------------------------

;; Need to make a dissociate function for every reaction 
;; If the product is the same, no need to make a new dissociation function

to dissociate-a1-&-s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
            
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-tot-1 rxn-tot-1 + 1
          set rxn-reactant nobody
          set performance performance + performance-1
          hatch-mod-a-1-n 1 [mod-a-1-n-char]
        ]]
  stop
end

to dissociate-a2-&-mod-a1 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-2-n 1 [mod-a-2-n-char]
        ]]
  stop
end

to dissociate-a3-&-mod-a2 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-3-n 1 [mod-a-3-n-char]
        ]]
  stop
end

to dissociate-a4-&-mod-a3 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-4-n 1 [mod-a-4-n-char]
        ]]
  stop
end

to dissociate-a5-&-mod-a4 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-substrate 1 [substrate-char]
        ]]
  stop
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Super
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;a-#-s

to dissociate-a1s-&-mod-a2 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-2 rxn-tot-2 + 1
          set performance performance + performance-1
          hatch-mod-a-1-s 1 [mod-a-1-s-char]
        ]]
  stop
end

to dissociate-a1s-&-substrate [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-2
          hatch-mod-a-1-n 1 [mod-a-1-n-char]
        ]]
  stop
end

;a2s

to dissociate-a2s-&-mod-a3 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-2 rxn-tot-2 + 1
          set performance performance + performance-2
          hatch-mod-a-2-s 1 [mod-a-2-s-char]
        ]]
  stop
end

to dissociate-a2s-&-mod-a1 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-2-n 1 [mod-a-2-n-char]
        ]]
  stop
end


to dissociate-a3s-&-mod-a4 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-2 rxn-tot-2 + 1
          set performance performance + performance-2
          hatch-mod-a-3-s 1 [mod-a-3-s-char]
        ]]
  stop
end

to dissociate-a3s-&-mod-a2 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-3-n 1 [mod-a-3-n-char]
        ]]
  stop
end

;;a4


to dissociate-a4s-&-sub [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-2 rxn-tot-2 + 1
          set performance performance + performance-2
          hatch-mod-a-4-s 1 [mod-a-4-s-char]
        ]]
  stop
end

to dissociate-a4s-&-mod-a-3 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-4-n 1 [mod-a-4-n-char]
        ]]
  stop
end
;;a-5s


to dissociate-a5s-&-mod-a-4 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-2 rxn-tot-2 + 1
          set performance performance + performance-2
          hatch-substrate 1 [substrate-char]
        ]]
  stop
end



to dissociate-a5s-&-mod-a-1 [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-substrate-s 1 [substrate-s-char]
        ]]
  stop
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; a-#-r
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to dissociate-a1r-&-s-s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
            
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-tot-1 rxn-tot-1 + 1
          set rxn-reactant nobody
          set performance performance + performance-1
          hatch-mod-a-1-s 1 [mod-a-1-s-char]
        ]]
  stop
end

to dissociate-a2r-&-mod-a1s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-2-s 1 [mod-a-2-s-char]
        ]]
  stop
end

to dissociate-a3r-&-mod-a2s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-3-s 1 [mod-a-3-s-char]
        ]]
  stop
end

to dissociate-a4r-&-mod-a3s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-mod-a-4-s 1 [mod-a-4-s-char]
        ]]
  stop
end

to dissociate-a5r-&-mod-a4s [bind-time orig-mass orig-rad]
  if rxn-reactant = "complex"
  [
  let rxn-dis? (ticks - rxn-time-dif)
  if bind-time < rxn-dis?
          [
          set mass orig-mass
          set radius orig-rad
          set size radius
          set rxn-time-dif 0
          set rxn-reactant nobody
          set rxn-tot-1 rxn-tot-1 + 1
          set performance performance + performance-1
          hatch-substrate-s 1 [substrate-s-char]
        ]]
  stop
end









